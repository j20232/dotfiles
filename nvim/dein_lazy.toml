# Completion

## Vim script
## https://github.com/Shougo/neco-vim
[[plugins]]
repo = 'Shougo/neco-vim'

## Adding snippets
## https://github.com/Shougo/neosnippet.vim
[[plugins]]
repo = 'Shougo/neosnippet.vim'

## Standard snippets for neosnippet.vim
## https://github.com/Shougo/neosnippet-snippets
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

## Completion framework for the environment where deoplete.nvim doesn't work
## https://github.com/Shougo/neocomplete.vim
[[plugins]]
repo = 'Shougo/neocomplete.vim'
on_i = 1
hook_add = '''
  let g:neocomplete#enable_at_statup=1
  let g:neocomplete#max_list=50
  let g:neocomplete#max_keyword_width=80
  let g:neocomplete#enable_ignore_case=1
  highlight Pmenu ctermbg=6
  highlight PmenuSel ctermbg=3
  highlight PMenuSbar ctermbg=0
'''

## Asynchronous lint engine
## https://github.com/w0rp/ale
[[plugins]]
repo = 'w0rp/ale'
on_ft = ['python', 'cpp', 'c', 'cmake']
hook_add = '''
	let g:ale_linters = {
        \	'python'	 : ['flake8'],
        \ 'cpp'      : ['gcc'],
        \ 'c'        : ['gcc'],
        \ 'cmake'    : ['gcc']
		\	}
	let g:ale_sign_column_always = 1
	let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']
  let g:ale_echo_msg_error_str = 'E'
	let g:ale_echo_msg_warning_str = 'W'
	let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
	let g:ale_lint_on_enter = 1
	let g:ale_lint_on_save = 1
	let g:ale_lint_on_text_change = 'never'
	nnoremap <silent> <C-k> <Plug>(ale_previous_wrap)
	nnoremap <silent> <C-j> <Plug>(ale_next_wrap)
'''

#------------------------------------------------------------------- 

# Syntax and highlighting of Languages 

## json
## Highlighting of keywords vs values
## https://github.com/elzr/vim-json
[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

## toml
## Syntax for TOML
## https://github.com/cespare/vim-toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

## Python
## Autocompletion/static analysis for Python
## https://github.com/deoplete-plugins/deoplete-jedi
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
hook_add = '''
    let s:pyenv_root = empty($PYENV_ROOT) ? expand('$HOME/.pyenv') : $PYENV_ROOT
    let g:deoplete#sources#jedi#python_path = s:pyenv_root . "/shims/python"
'''

## Python
## indentation behavior to comply with PEP8
## https://github.com/Vimjas/vim-python-pep8-indent
[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python']

## C++
## Asynchronous completion of code written in C, C++
## https://github.com/deoplete-plugins/deoplete-clang
[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
    let g:deoplete#sources#clang#libclang_path = system("llvm-config --prefix")[:-2] . '/lib/libclang.dylib'
    let g:deoplete#sources#clang#clang_header = system("llvm-config --prefix")[:-2] . '/lib/clang'
    let g:deoplete#sources#clang#sort_algo = 'priority'
    let g:deoplete#sources#clang#clang_complete_database="./build/"
'''
depends = ['deoplete.nvim']

## C++
## Completion of headers
## https://github.com/Shougo/neoinclude.vim
[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

## JavaScript
## Async syntax highlighting for JavaScript
## https://github.com/billyvg/tigris.nvim
[[plugins]]
repo = 'billyvg/tigris.nvim'
on_ft = ['javascript', 'javascript.jsx']
host_post_update='''
  let g:dein#plugin.build = './install.sh'
'''
host_add='''
  let g:tigris#enabled = 1
  let g:tigris#on_the_fly_enabled = 1
  let g:tigris#delay = 1
'''
